
1. 회원 테이블 생성하기

create table mvcregister(
id number constraint pk_mvcregister_id primary key,
pwd varchar2(20) not null,
email varchar2(50) not null
);

desc mvcregister;

웹 프로젝트 생성
연결 테이스 (DBCP) >> ojdbc6.jar , context.xml , 연결.jsp >> test END



Model2	MVC 패턴 작업
--------------------------------------------------------------------------------
Model
POJO (순수한 자바 코드) ((어떤 것에도 의존하지 않는 ..)

1. DTO 생성하기 >> DB 테이블과 같은 구조로 Class 생성
2. DB 연결 (POOL) >> DAO 생성 >> CRUD >> 전체 조회, 조건 조회, 삽입, 삭제, 수정 +@ (문자열 검색 ...)

SERVICE단 추후에

View
1. html or jsp (UI 데이터 출력 유무) >> Boot >> include하려면 모든 페이지가 jsp여야 한다.
2. EL & JSTL >> server에서 데이터를 request에 담아 forward, 해당 request 객체를 view에서 
	ex) ${requestScope.list} / ${sessionScope.id} 등으로 사용
3. JSP 보안 >> WEB-INF >> views >> member or admin or board >> jsp 관리
4. ajax(비동기 처리) >> xmlHttpRequest


Controller
1. 요청마다 Controller 생성하기 (servlet 생성)
	1.1. write	>>	/write	>>	ServletWrite
	1.2. list		>>	/list		>>	ServletList
	
2. 요청마다 Controller 생성하지 말고 1개 (servlet 생성)
	2.1. FrontController >> servlet 1개 (모든 요청 판단) >> 판단 근거
	2.1.1. 판단 근거
		* command 방식: 글쓰기 (servlet.do?cmd=write&id=kglim&pwd=1004), 글목록보기 (servlet.do?cmd=list)
			parameter로 판단
			if (cmd.equals("write") >> 글쓰기 작업 수행
		* url 방식: 글쓰기 (write.do?id=kglim&pwd=1004), 글목록보기 (list.do) >> url 주소로 요청을 판단
			** 주의사항) url 패턴 >> *.do
			
--------------------------------------------------------------------------------

package 구성
도메인 구성

kr.or.kosa.dto
kr.or.kosa.dao
kr.or.kosa.controller
kr.or.kosa.utils

.
.
.

kr.or.kosa.member.dto
kr.or.kosa.admin.dto
kr.or.kosa.board.dto
kr.or.kosa.dao
kr.or.kosa.controller
kr.or.kosa.utils
			

