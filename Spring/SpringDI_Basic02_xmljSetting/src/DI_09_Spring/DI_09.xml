<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 
객체의 생성과 조립(주입)

Spring은 자신만의 컨테이너를 제공 (Spring 전용 메모리 공간) 안에
xml 또는 annotation을 통해 객체를 생성하고 조립하는 과정을 수행 (객체간 관계 설정)

컨테이너 안 생성된 객체를 불러서 ... getbean() 함수

IOC 컨테이너 (제어의 역전)
프로그램의 제어 구조가 바뀜
내가 주도했던 코드 >> Spring이 주체가 됨
작은 단위의 부품을 만들어 놓고 조립하는 행위 (레고 블럭 ..)

Java 코드

ProtocolHandlerFactory factory = new ProtocolHandlerFactory();
		
Map<String, ProtocolHandler> handler = new HashMap<String, ProtocolHandler>();
handler.put("rss", new RssHandler());
handler.put("rest", new RestHandler());
		
factory.setHandlers(handler);

 -->

<bean id="rssHandler" class="DI_09_Spring.RssHandler"></bean>
<bean id="protocolHandlerFactory" class="DI_09_Spring.ProtocolHandlerFactory">
	<property name="handlers">
		<map>
			<entry> <!-- handler.put("rss", new RssHandler()); -->
				<key><value>rss</value></key>
				<ref bean="rssHandler" />
				<!-- 이미 만들어진 것 사용 -->
			</entry>
			<entry>
				<key><value>rest</value></key>
				<bean class="DI_09_Spring.RestHandler"></bean>
				<!-- 새로 만들어서 사용 (재사용 X) -->
			</entry>
		</map>
	</property>
</bean>
</beans>