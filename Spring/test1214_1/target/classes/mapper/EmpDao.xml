<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  
[key point]
Mybatis 사용 프로젝트 진행시

1. mapper namespace 이름 : DAO 가지는 interface 이름을 그대로
2. <select id="" 이름을  interface 가지는 함수명과 동일
result : interface 와 mapper 있으면 실행

	// 전체 조회
	List<Emp> allList(int page, String field, String query) throws ClassNotFoundException, SQLException;

	// 조건 조회
	List<Emp> searchList(int page, String field, String query) throws ClassNotFoundException, SQLException;

	// 삽입
	int insert(Emp n) throws ClassNotFoundException, SQLException;

	// 수정
	int update(Emp emp) throws ClassNotFoundException, SQLException;

	// 삭제
	int delete(int empno) throws ClassNotFoundException, SQLException;
-->

<!--  
	1. parameter 1개: 생략 or parameterType="int"
	2. parameter DTO 객체 : parameterType="vo.Notice"
	3  parameter DTO아니고 2개 이상인 경우
	3.1  hashMap >> map.put(key,value) >> parameterType="hashMap" 권장 ....
    3.2  mybatis는 parameter 값을 read할때 : param1 , param2, param3 >> mybatis제공하는 키워드	
	
	ex)
	List<Emp> allList(int page, String field, String query)
	param1 > field
	param2 > query
	
	parameter 1개는 param 키워드 사용불가
-->

<mapper namespace="dao.EmpDao">
	
	<!-- 	List<Emp> allList(int page, String field, String query) -->
	<select id="allList" resultType="vo.Emp">
		select * from EMP order by EMPNO
	</select>
	
		
	<!-- 	List<Emp> searchList(int page, String field, String query) -->
	<select id="searchList" resultType="vo.Emp">
		 select empno, ename, job, mgr, hiredate, sal, comm, deptno
		 from EMP
		 WHERE empno LIKE '%${param1}%' order by empno
	</select>
	
	
	<!-- Emp getEmp(int empno) -->
	<select id="getEmp" resultType="vo.Emp">
		 select empno, ename, job, mgr, hiredate, sal, comm, deptno
		 from EMP
		 where EMPNO=#{EMPNO}
	</select>
	
	
	<!--	int insert(Emp emp) -->
	<insert id="insert" parameterType="vo.Emp">
		insert into emp(empno, ename, job, mgr, hiredate, sal, comm, deptno)
		values(#{empno}, #{ename}, #{job}, #{mgr}, sysdate, #{sal}, #{comm}, #{deptno})
	</insert>
	
	
	<!-- int delete(int empno) -->
	<delete id="delete">
		delete from EMP where EMPNO=#{EMPNO}
	</delete>
	
	
	<!-- int update(Emp emp) -->
	<update id="update" parameterType="vo.Emp">
	  update EMP
	  set   
	  		ename=#{ename},
	  		job=#{job},
	  		mgr=#{mgr},
	  		sal=#{sal},
	  		comm=#{comm},
	 		deptno=#{deptno}
	  where empno=#{empno}
	</update>
	
</mapper>





